View(cor2)
median(cor2$value, na.rm=T)
d<-read.csv("IS_C_rho.csv", row.names = 1)
library(pheatmap)
bk <- c(seq(0.4,1,by=0.01))
pdf("IS_cor.pdf", width = 3.5, height = 3)
pheatmap(cor,scale = "none",cluster_col = F,cluster_rows=F,
color = c(colorRampPalette(colors = c("#F5E3E3","#d17b78"))(length(bk))),
legend_breaks=seq(0.4,1,0.2),
breaks=bk,
clustering_distance_rows = F,
cluster_cols = F,
show_colnames = F,
show_rownames = F)
dev.off()
dev.off()
dev.off()
dev.off()
pdf("IS_cor.pdf", width = 3.5, height = 3)
pheatmap(cor,scale = "none",cluster_col = F,cluster_rows=F,
color = c(colorRampPalette(colors = c("#F5E3E3","#d17b78"))(length(bk))),
legend_breaks=seq(0.4,1,0.2),
breaks=bk,
clustering_distance_rows = F,
cluster_cols = F,
show_colnames = F,
show_rownames = F)
dev.off()
d1 = read.csv("peptides REV_CON plasma1.csv")
setwd("E:/sunny文件/瓜氨酸化蛋白抗原的发现/整理文章用图/返修/代码和数据复核/Extended fig.1")
d1 = read.csv("peptides REV_CON plasma1.csv")
rm(list =ls())
d = readxl::read_xlsx("279个重复样品.xlsx", sheet=1)
View(d)
length(unique(d$sample))
d$ID = paste(d$batch,d$reporter)
View(d)
d1 = read.csv("peptides REV_CON plasma1.csv")
View(d1)
d1$batch = gsub("\\_.*","",d1$batch)
View(d1)
View(d)
View(d1)
d1 = read.csv("peptides REV_CON plasma1.csv")
View(d1)
View(d1)
d1$batch = gsub("\\_.*","",d1$batch)
d2 = read.csv("peptides REV_CON plasma1重复上样.csv")
View(d2)
View(d2)
View(d1)
d1 = d1[d1$batch %in% d2$batch,] %>% filter(reporter!=0)
d2 = d2[d2$batch %in% d1$batch,] %>% filter(reporter!=0)
d1$value[d1$value==0]=NA; d2$value[d2$value==0]=NA
d1$value = log2(d1$value); d2$value = log2(d2$value)
d1$ID = paste(d1$batch, d1$reporter)
d2$ID = paste(d2$batch, d2$reporter)
View(d1)
d1 = d1[d1$ID %in% d$ID,]
d2 = d2[d2$ID %in% d$ID,]
View(d1)
d1_1 = reshape2::dcast(d1, protein ~ ID, value.var = "value")
View(d1_1)
d2_1 = reshape2::dcast(d2, protein ~ ID, value.var = "value")
d1_1 = d1_1[d1_1$protein %in% d2_1$protein,]
d2_1 = d2_1[d2_1$protein %in% d1_1$protein,]
table(d1_1$protein == d2_1$protein)
table(colnames(d1_1)==colnames(d2_1))
re = NULL
i = 1
for(i in 2:ncol(d1_1)){
sample = colnames(d1_1)[i]
d = cbind(d1_1[,i], d2_1[,i]) %>% data.frame() %>% na.omit(); colnames(d)=c("ID1","ID2")
p = cor.test(d$ID1, d$ID2, method="spearman")[["p.value"]]
cor = cor.test(d$ID1, d$ID2, method="spearman")[["estimate"]][["rho"]]
re = rbind(re, data.frame(sample,p,cor))
}
ggplot(re, aes(cor))+
geom_density(fill="#ffc0cb")+
geom_vline(xintercept = median(re$cor), linetype=2)+
scale_x_continuous(expand = c(0,0))+
scale_y_continuous(limits = c(0,15), expand = c(0,0))+
theme_classic()+
theme(legend.position = "none",
axis.line = element_line(linewidth = .7,color="black"),
axis.ticks = element_line(linewidth = .7,color="black"),
axis.ticks.length=unit(0.12, "cm"))
ggsave("重复上样 相关性密度图.pdf", width = 3, height = 3)
median(re$cor)
rm(list = ls())
# localization prob > 0.9, TMTc ratio>=0.01, 去除C末端cit修饰肽段，至少一个血浆样品检测到
all = read.csv("cohort1 pro9 removed_CON_REV_othermodifications filtered_prob adjusted_sum divided_by_IS sample_name TMCcounts1.csv")
identified = readxl::read_xlsx("G:/scan raw/results/2503（三个数据prob 0.9,TMTc ratio 0.01,去除C末端cit的并集）二级谱图的结果.xlsx", sheet=2) %>% filter(Comfirm=="Comfirm")
identified = readxl::read_xlsx("2503（三个数据prob 0.9,TMTc ratio 0.01,去除C末端cit的并集）二级谱图的结果.xlsx", sheet=2) %>% filter(Comfirm=="Comfirm")
all$ID_PA = gsub("\\(pa\\)","\\(cit\\)",all$ID_PA)
all = all[all$ID_PA %in% identified$ID_PA,]
View(all)
all = all[all$ID_PA %in% identified$ID_PA,]
dat = reshape2::melt(all, id.vars="ID_PA", measure.vars=c(9:ncol(all)))
dat$group=substring(dat$variable,1,1); table(dat$group)
dat$group3 = ifelse(dat$group=="H","H",ifelse(dat$group=="P","P","RA"))
dat$value = as.numeric(dat$value)
table(dat$variable)
View(dat)
dat$variable = paste(dat$group3,dat$variable)
ggplot(dat, aes(variable, log2(value), color=group3))+
geom_boxplot(outlier.size = .2,size = 0.1, fatten = 3)+
scale_color_manual(values = c("#3d7dae","#cf9254","#b4373d"))+
theme_classic()+
scale_y_continuous(limits = c(-8,4), breaks = c(-8,-6,-4,-2,0,2,4), expand = c(0,0))+
scale_x_discrete(expand = c(0.03,0.03))+
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
all = readxl::read_xlsx("滑膜 任一batchTMTc pro9 removed_CON_REV_othermodifications filtered_prob_TMTcratio adjusted_sum divided_by_IS sample_name NA.xlsx", sheet=3)
#synovium
all = readxl::read_xlsx("Extended Fig.1l.xlsx", sheet=3)
identified = readxl::read_xlsx("Extended Fig.1k_2.xlsx", sheet=2) %>% filter(Comfirm=="Comfirm")
all$ID_PA = gsub("\\(pa\\)","\\(cit\\)",all$ID_PA)
all = all[all$ID_PA %in% identified$ID_PA,]
dat = reshape2::melt(all, id.vars="ID_PA", measure.vars=c(5:12))
dat$group=substring(dat$variable,1,2); table(dat$group)
dat$value = as.numeric(dat$value)
table(dat$variable)
dat$variable = ifelse(dat$variable=="OA7","OA2OA7",
ifelse(dat$variable=="RA12","RA3RA12",
ifelse(dat$variable=="OA5","OA5",
ifelse(dat$variable=="OA18","OA18",
ifelse(dat$variable=="OA8","OA8",
ifelse(dat$variable=="RA1","RA1",
ifelse(dat$variable=="RA14","RA4",
ifelse(dat$variable=="RA2","RA2","ns"))))))))
table(dat$variable)
ggplot(dat, aes(variable, log2(value), color=group))+
geom_boxplot()+
scale_color_manual(values = c("#3583c9","#8b7ec0"))+
theme_classic()+
scale_y_continuous(limits = c(-12,6), breaks = c(-12,-9,-6,-3,0,3,6), expand = c(0,0))+
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
View(dat)
#synovium
all = readxl::read_xlsx("Extended Fig.1l.xlsx", sheet=3)
View(all)
identified = readxl::read_xlsx("Extended Fig.1k_2.xlsx", sheet=2) %>% filter(Comfirm=="Comfirm")
all$ID_PA = gsub("\\(pa\\)","\\(cit\\)",all$ID_PA)
all = all[all$ID_PA %in% identified$ID_PA,]
View(dat)
dat = reshape2::melt(all, id.vars="ID_PA", measure.vars=c(5:12))
View(dat)
dat$group=substring(dat$variable,1,2); table(dat$group)
dat$value = as.numeric(dat$value)
table(dat$variable)
View(dat)
dat$variable = ifelse(dat$variable=="OA7","OA2OA7",
ifelse(dat$variable=="RA12","RA3RA12",
ifelse(dat$variable=="OA5","OA5",
ifelse(dat$variable=="OA18","OA18",
ifelse(dat$variable=="OA8","OA8",
ifelse(dat$variable=="RA1","RA1",
ifelse(dat$variable=="RA14","RA4",
ifelse(dat$variable=="RA2","RA2","ns"))))))))
table(dat$variable)
ggplot(dat, aes(variable, log2(value), color=group))+
geom_boxplot()+
scale_color_manual(values = c("#3583c9","#8b7ec0"))+
theme_classic()+
scale_y_continuous(limits = c(-12,6), breaks = c(-12,-9,-6,-3,0,3,6), expand = c(0,0))+
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
#plasma cit2
all = read.csv("Extended Fig.1m.csv")
#plasma cit2
all = read.csv("Extended Fig.1m.csv")
#去假阳性
identified = readxl::read_xlsx("Extended Fig.1k_2.xlsx", sheet=2) %>% filter(Comfirm=="Comfirm")
all$ID_PA = gsub("\\(pa\\)","\\(cit\\)",all$ID_PA)
all = all[all$ID_PA %in% identified$ID_PA,]
dat = reshape2::melt(all, id.vars="ID_PA", measure.vars=c(5:ncol(all)))
dat$group=substring(dat$variable,1,2); table(dat$group)
dat$value = as.numeric(dat$value)
table(dat$variable)
dat$variable = paste(dat$group3,dat$variable)
ggplot(dat, aes(variable, log2(value), color=group))+
geom_boxplot(outlier.size = .4)+
scale_color_manual(values = c("#3d7dae","#b22f36"))+
theme_classic()+
scale_x_discrete(expand = c(0.03,0.03))+
scale_y_continuous(limits = c(-8,4), breaks = c(-8,-6,-4,-2,0,2,4), expand = c(0,0))+
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),axis.line = element_line(color="black", linewidth = .7),
axis.ticks = element_line(color="black", linewidth = .7),
axis.ticks.length =  unit(1.25,"mm"))
p1 = read.csv("Extended Fig.1n.csv")%>%
filter(unique>=2, reporter>0)
names(p1)
View(p1)
table(p1$reporter)
p1$value[p1$value==0] = NA
plot(density(na.omit(p1$value)))
c("Q6UX06","P13611","Q15109") %in% p1$protein
ggplot(na.omit(p1), aes(value)) +
geom_histogram(aes(y = ..density..), fill="#ffc0cb", bins=50, alpha=1) + # 用density匹配高度
geom_density(color = "black", size = 0.5) +                           # 曲线自动与直方图匹配
#geom_vline(xintercept = median(p1$value, na.rm = T), linetype=2)+
geom_vline(xintercept = median(p1$value[p1$protein=="Q6UX06"], na.rm = T), linetype=2, color="black")+
geom_vline(xintercept = median(p1$value[p1$protein=="Q15109"], na.rm = T), linetype=2, color="black")+
geom_vline(xintercept = median(p1$value[p1$protein=="P13611"], na.rm = T), linetype=2, color="black")+
theme_classic() +
scale_x_continuous(limits = c(0, 0.2 * 10^7)) +
scale_y_continuous(expand = c(0,0), limits = c(0,0.8))+
scale_x_log10() +
theme(
axis.text = element_text(color="black"),
axis.line = element_line(linewidth=.8, color="black"),
axis.ticks = element_line(linewidth=.8, color="black"),
axis.ticks.length = unit(1.25, "mm")
)
plot(density(na.omit(p1$value)))
c("Q6UX06","P13611","Q15109") %in% p1$protein
View(p1)
ggplot(na.omit(p1), aes(value)) +
geom_histogram(aes(y = ..density..), fill="#ffc0cb", bins=50, alpha=1) + # 用density匹配高度
geom_density(color = "black", size = 0.5) +                           # 曲线自动与直方图匹配
#geom_vline(xintercept = median(p1$value, na.rm = T), linetype=2)+
geom_vline(xintercept = median(p1$value[p1$protein=="Q6UX06"], na.rm = T), linetype=2, color="black")+
geom_vline(xintercept = median(p1$value[p1$protein=="Q15109"], na.rm = T), linetype=2, color="black")+
geom_vline(xintercept = median(p1$value[p1$protein=="P13611"], na.rm = T), linetype=2, color="black")+
theme_classic() +
scale_x_continuous(limits = c(0, 0.2 * 10^7)) +
scale_y_continuous(expand = c(0,0), limits = c(0,0.8))+
scale_x_log10() +
theme(
axis.text = element_text(color="black"),
axis.line = element_line(linewidth=.8, color="black"),
axis.ticks = element_line(linewidth=.8, color="black"),
axis.ticks.length = unit(1.25, "mm")
)
library(ggridges)
rm(list=ls())
elisa = readxl::read_xlsx("Extended Fig.1o.xlsx", sheet=1)
omics = readxl::read_xlsx("Extended Fig.1o.xlsx", sheet=2)
names(elisa); names(omics)
colnames(elisa)[1:4]=c("sample","AGER","VCNA","OLFM4")
colnames(omics)[1:5]=c("sample","s","AGER","VCNA","OLFM4")
View(omics)
data = rbind(elisa[,1:4] %>% mutate(set="elisa"), omics[,c(1,3:5)] %>% mutate(set="Aomics"))
dat = reshape2::melt(data, id.vars=c("sample","set"))
dat$value = as.numeric(dat$value)
dat$g = paste(dat$variable,dat$set)
View(dat)
ggplot(na.omit(dat), aes(value,variable,fill=variable))+
geom_density_ridges()+
facet_wrap(.~set, nrow=1,scales = "free_x")+
scale_fill_manual(values = c("#3d7dae","#d72a26","#eac450"))+
theme_classic()+
theme(strip.background = element_blank(),legend.position = "none",
axis.line = element_line(color="black"),
axis.ticks = element_line(color="black"))
ggplot(na.omit(dat[dat$set=="Aomics",]), aes(value)) +
geom_histogram(aes(y = ..density..), fill="#aea8d1", bins=20, alpha=1) + # 用density匹配高度
geom_density(color = "black", size = 0.5) +
facet_wrap(.~variable, nrow=3,scales = "free_y")+                  # 曲线自动与直方图匹配
theme_classic() +
#scale_x_continuous(limits = c(0, 0.2 * 10^7)) +
scale_x_log10() +
theme(
axis.text = element_text(color="black"),
axis.line = element_line(linewidth=.8, color="black"),
axis.ticks = element_line(linewidth=.8, color="black"),
axis.ticks.length = unit(1.25, "mm")
)
ggplot(na.omit(dat), aes(value,variable,fill=variable))+
geom_density_ridges()+
facet_wrap(.~set, nrow=1,scales = "free_x")+
scale_fill_manual(values = c("#3d7dae","#d72a26","#eac450"))+
theme_classic()+
theme(strip.background = element_blank(),legend.position = "none",
axis.line = element_line(color="black"),
axis.ticks = element_line(color="black"))
View(dat)
#====================================================================Extended Fig.1p
data=read.csv("Extended.Fig.1p.csv")
#====================================================================Extended Fig.1p
data=read.csv("Extended Fig.1p.csv")
rm(list=ls())
#====================================================================Extended Fig.1p
data=read.csv("Extended Fig.1p.csv")
View(data)
data1=reshape2::melt(data,measure.vars = data[,1:7])
View(data)
data1=reshape2::melt(data,measure.vars = colnames(data[,1:7]))
View(data1)
names(data1)
names(data1)
ggbarplot(data1,
x = "variable",
y = "value",
width = 0.6,
fill = "variable",          # 按变量填充颜色
color = "black",            # 边框颜色
palette = "jco",            # 使用jco配色（可选）
add = c("mean_se", "jitter"), # 添加均值标准误和散点
add.params = list(
width = 0.2,              # 误差棒宽度
jitter = 0.1,             # 散点抖动幅度
size = 1                  # 散点大小
)) +
labs(x = "Variables", y = "Value") + # 坐标轴标签
theme_pubr() +                      # 使用ggpubr的简洁主题
theme(legend.position = "none")
library(ggpubr)
ggbarplot(data1,
x = "variable",
y = "value",
width = 0.6,
fill = "variable",          # 按变量填充颜色
color = "black",            # 边框颜色
palette = "jco",            # 使用jco配色（可选）
add = c("mean_se", "jitter"), # 添加均值标准误和散点
add.params = list(
width = 0.2,              # 误差棒宽度
jitter = 0.1,             # 散点抖动幅度
size = 1                  # 散点大小
)) +
labs(x = "Variables", y = "Value") + # 坐标轴标签
theme_pubr() +                      # 使用ggpubr的简洁主题
theme(legend.position = "none")
ggbarplot(data1,
x = "variable",
y = "value",
width = 0.6,
fill = "variable",          # 按变量填充颜色
color = "black",            # 边框颜色
palette = "jco",            # 使用jco配色（可选）
add = c("mean_se", "jitter"), # 添加均值标准误和散点
add.params = list(
width = 0.2,              # 误差棒宽度
jitter = 0.1,             # 散点抖动幅度
size = 1                  # 散点大小
)) +
scale_y_continuous(expand = c(0,0))+
labs(x = "Variables", y = "Value") + # 坐标轴标签
theme_pubr() +                      # 使用ggpubr的简洁主题
theme(legend.position = "none")
ggbarplot(data1,
x = "variable",
y = "value",
width = 0.6,
fill = "variable",          # 按变量填充颜色
color = "black",            # 边框颜色
palette = "jco",            # 使用jco配色（可选）
add = c("mean_se", "jitter"), # 添加均值标准误和散点
add.params = list(
width = 0.2,              # 误差棒宽度
jitter = 0.1,             # 散点抖动幅度
size = 1                  # 散点大小
)) +
scale_y_continuous(expand = c(0,0),limits = c(0,0.8))+
labs(x = "Variables", y = "Value") + # 坐标轴标签
theme_pubr() +                      # 使用ggpubr的简洁主题
theme(legend.position = "none")
ggbarplot(data1,
x = "variable",
y = "value",
width = 0.6,
fill = "variable",          # 按变量填充颜色
color = "black",            # 边框颜色
palette = "jco",            # 使用jco配色（可选）
add = c("mean_se", "jitter"), # 添加均值标准误和散点
add.params = list(
width = 0.2,              # 误差棒宽度
jitter = 0.1,             # 散点抖动幅度
size = 1                  # 散点大小
)) +
scale_y_continuous(expand = c(0,0),limits = c(0,0.8))+
labs(x = "Variables", y = "Value") + # 坐标轴标签
theme_pubr() +                      # 使用ggpubr的简洁主题
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1) )
# =================================================================Extended Fig.1q
data=readxl::read_xlsx("Extended Fig.1q.xlsx",sheet=1)
our=readxl::read_xlsx("Extended Fig.1q.xlsx",sheet=2)
View(data)
View(our)
# =================================================================Extended Fig.1q
data=readxl::read_xlsx("Extended Fig.1q.xlsx",sheet=1)
our=readxl::read_xlsx("Extended Fig.1q.xlsx",sheet=2)
# =================================================================Extended Fig.1q
rm(list=ls())
data=readxl::read_xlsx("Extended Fig.1q.xlsx",sheet=1)
our=readxl::read_xlsx("Extended Fig.1q.xlsx",sheet=2)
blood=list(others=data$`The Rheumatoid Arthritis-Associated Citrullinome_serum`,ourdata=our$synovium)
p1=VennDiagram::venn.diagram(blood,filename = NULL)
grid.newpage()
library(grid)
View(data)
others=data[,2]
ourdata=our$plasma
blood=list(c(others=data[,2],ourdata=our$plasma))
p1=VennDiagram::venn.diagram(blood,filename = NULL)
blood=list(others=na.omit(data$`The Rheumatoid Arthritis-Associated Citrullinome_serum`),ourdata=na.omit(our$plasma))
p1=VennDiagram::venn.diagram(blood,filename = NULL)
grid.newpage()
grid.draw(p1)
setwd("E:/sunny文件/瓜氨酸化蛋白抗原的发现/整理文章用图/返修/代码和数据复核/Extended fig.1")
#==============================================================Extended Fig.1a,b
library(dplyr)
library(VennDiagram)
library(GGally)
library(devtools)
library(rstatix)
library(reshape2)
library(ggridges)
library(ggplot2)
library(ggpubr)
library(grid)
data1 = read.csv("Extended Fig 1a,b.csv")
table(data1$Protein)
dat = data1 %>%group_by(Tissue, Protein) %>% summarise(n=n(),xcommon=NA)
data1 = data1[!is.na(data1$ID_position),]
for(i in unique(data1$Tissue)){
d = data1[data1$Tissue==i,]
d1 = reshape2::dcast(d, ID_position ~ Protein, value.var = "Tissue") %>% filter(PAD2!=0 & PAD4!=0)
dat$xcommon[dat$Tissue==i]=nrow(d1)
}
dat1 = reshape2::melt(dat, id.vars=1:2, measure.vars=3:4)
names(dat1)
dat1$col = paste(dat1$Protein, dat1$variable); table(dat1$col)
ggplot(dat1, aes(Protein, value, fill=col))+
geom_bar(stat="identity", width = .6, color="black")+
facet_wrap(.~Tissue,nrow=1)+
theme_classic()+
scale_fill_manual(values = c("#d8e5ef","black","#F1E7CB","black"))+
geom_text(aes(label=value), nudge_y = 2)+
scale_y_continuous(expand = c(0,0))+
labs(x="", y="Number of citrullinated peptides/ number of total peptides")+
theme(axis.line = element_line(linewidth=.9, color="black"),
axis.ticks = element_line(linewidth=.9, color="black"),
axis.ticks.length = unit(1.25,"mm"))
ggsave("Extended Fig 1a.pdf", width = 6.5, height = 3)
data<-list(PAD2 = na.omit(unique(data1$ID_position[data1$Protein=="PAD2"])),
PAD4= na.omit(unique(data1$ID_position[data1$Protein=="PAD4"])))
View(dat1)
View(data1)
library(dplyr)
library(ggplot2)
library(ComplexHeatmap)
library(circlize)
#==================================================================Extended Fig.3a
setwd("E:/sunny文件/瓜氨酸化蛋白抗原的发现/整理文章用图/返修/代码和数据复核/20250330 figure+code/Extended Data Fig. 3/eFig. 3a")
rm(list = ls())
result=read.csv("eFig. 3a.csv")
names(result)
table(result$sig_mean)
ggplot(result, aes(x=log2(RO_mean), y=-log10(p_t), color=sig_mean))+
geom_point()+
geom_hline(yintercept = -log10(0.05), linetype=2,linewidth=.5, color="#BBBBBB")+
geom_vline(xintercept = c(log2(1.2),-log2(1.2)), linetype=2,linewidth=.5, color="#BBBBBB")+
scale_color_manual(values = c("#5D669F","#BFBFBF","#AF322F"))+
theme_test()+
theme(axis.line = element_blank(),
panel.border = element_rect(linewidth=.8),
axis.ticks = element_line(linewidth=.8),
axis.ticks.length = unit(1.25,"mm"))
ggsave("volcano peptides.pdf", width = 3.8, height = 3)
#==================================================================Extended Fig.3b
setwd("E:/sunny文件/瓜氨酸化蛋白抗原的发现/整理文章用图/返修/代码和数据复核/20250330 figure+code/Extended Data Fig. 3/eFig. 3b")
rm(list=ls())
dat1=readxl::read_xlsx("eFig 3b.xlsx", sheet=1)
data = dat1[,10:17] %>% data.frame(); data[,] = lapply(data[,], as.numeric)
range(data, na.rm=T)
rownames(data)=dat1$ID_PA
data[data==0]=NA
data$ratio=log2(apply(data[,5:8],1, mean, na.rm=T) / apply(data[,1:4],1, mean, na.rm=T))
data$ID=gsub("\\(.*","",dat1$Gene_position)
data$n_OA=4-rowSums(is.na(data[,1:4])); range(data$n_OA)
data$n_RA=4-rowSums(is.na(data[,5:8])); range(data$n_RA)
data$unique=rep(1,nrow(data))
dat=data[data$n_OA >= 2 & data$n_RA >= 2, c("ID", "ratio", "unique")] %>% group_by(ID) %>% summarise(log2sum=sum(ratio), n=sum(unique))
dat$type=ifelse(dat$log2sum > 0.5, "up", ifelse(dat$log2sum<(-0.5), "down", "ns")); table(dat$type)
write.csv(dat,"The citrullination state change (∆Ps).csv", row.names = F)
ggplot(dat, aes(n, log2sum, color=type))+
geom_point(size=3)+
theme_classic()+
geom_hline(yintercept = c(0.5,-0.5), linetype=2, color="#CCCCCC")+
labs(x="No. of citrullinated peptides", y="ΔCs value")+
scale_color_manual(values = c('#154399', "#BBBBBB","#B81C23"))+
scale_x_sqrt()+
theme(axis.text = element_text(color="black"), axis.ticks = element_line(color="black", linewidth = .7),
axis.line = element_line(linewidth = .7), axis.ticks.length = unit(1.25,"mm"))
View(dat)
#==================================================================Extended Fig.3b
setwd("E:/sunny文件/瓜氨酸化蛋白抗原的发现/整理文章用图/返修/代码和数据复核/20250330 figure+code/Extended Data Fig. 3/eFig. 3b")
rm(list=ls())
dat1=readxl::read_xlsx("eFig 3b.xlsx", sheet=1)
data = dat1[,10:17] %>% data.frame(); data[,] = lapply(data[,], as.numeric)
range(data, na.rm=T)
rownames(data)=dat1$ID_PA
data[data==0]=NA
View(data)
data$ratio=log2(apply(data[,5:8],1, mean, na.rm=T) / apply(data[,1:4],1, mean, na.rm=T))
View(data)
data$ID=gsub("\\(.*","",dat1$Gene_position)
data$n_OA=4-rowSums(is.na(data[,1:4])); range(data$n_OA)
data$n_RA=4-rowSums(is.na(data[,5:8])); range(data$n_RA)
data$unique=rep(1,nrow(data))
View(data)
dat=data[data$n_OA >= 2 & data$n_RA >= 2, c("ID", "ratio", "unique")] %>% group_by(ID) %>% summarise(log2sum=sum(ratio), n=sum(unique))
View(dat)
View(data)
